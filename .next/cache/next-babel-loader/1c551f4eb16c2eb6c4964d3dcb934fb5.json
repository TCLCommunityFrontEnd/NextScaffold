{"ast":null,"code":"import _Axios from 'tcl-http-request';\nimport mockServer from \"../mock\";\nlet Axios = {};\nconst isProd = process.env.NODE_ENV === 'production';\n\nAxios.get = function (url, params = {}, opts = {}) {\n  mockServer(url, opts);\n  opts.baseURL = isProd ? opts.proBaseUrl : opts.devBaseUrl;\n  return _Axios.get(url, params, opts);\n};\n\nAxios.post = function (url, params = {}, opts = {}) {\n  mockServer(url, opts);\n  opts.baseURL = isProd ? opts.proBaseUrl : opts.devBaseUrl;\n  return _Axios.post(url, params, opts);\n};\n\nAxios.raw = function (method, url, params = {}, opts = {}) {\n  mockServer(url, opts);\n  opts.baseURL = isProd ? opts.proBaseUrl : opts.devBaseUrl;\n  return _Axios.raw(method, url, params, opts);\n};\n\nexport default Axios;","map":{"version":3,"sources":["/local/front-end/Next/next-scaffold/utils/http.js"],"names":["_Axios","mockServer","Axios","isProd","process","env","NODE_ENV","get","url","params","opts","baseURL","proBaseUrl","devBaseUrl","post","raw","method"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,YAAtC;;AAEAJ,KAAK,CAACK,GAAN,GAAY,UAASC,GAAT,EAAaC,MAAM,GAAC,EAApB,EAAuBC,IAAI,GAAC,EAA5B,EAA+B;AACvCT,EAAAA,UAAU,CAACO,GAAD,EAAKE,IAAL,CAAV;AACAA,EAAAA,IAAI,CAACC,OAAL,GAAeR,MAAM,GAACO,IAAI,CAACE,UAAN,GAAiBF,IAAI,CAACG,UAA3C;AACA,SAAOb,MAAM,CAACO,GAAP,CAAWC,GAAX,EAAeC,MAAf,EAAsBC,IAAtB,CAAP;AACH,CAJD;;AAKAR,KAAK,CAACY,IAAN,GAAa,UAASN,GAAT,EAAaC,MAAM,GAAC,EAApB,EAAuBC,IAAI,GAAC,EAA5B,EAA+B;AACxCT,EAAAA,UAAU,CAACO,GAAD,EAAKE,IAAL,CAAV;AACAA,EAAAA,IAAI,CAACC,OAAL,GAAeR,MAAM,GAACO,IAAI,CAACE,UAAN,GAAiBF,IAAI,CAACG,UAA3C;AACA,SAAOb,MAAM,CAACc,IAAP,CAAYN,GAAZ,EAAgBC,MAAhB,EAAuBC,IAAvB,CAAP;AACH,CAJD;;AAMAR,KAAK,CAACa,GAAN,GAAY,UAASC,MAAT,EAAgBR,GAAhB,EAAoBC,MAAM,GAAC,EAA3B,EAA8BC,IAAI,GAAC,EAAnC,EAAsC;AAC9CT,EAAAA,UAAU,CAACO,GAAD,EAAKE,IAAL,CAAV;AACAA,EAAAA,IAAI,CAACC,OAAL,GAAeR,MAAM,GAACO,IAAI,CAACE,UAAN,GAAiBF,IAAI,CAACG,UAA3C;AACA,SAAOb,MAAM,CAACe,GAAP,CAAWC,MAAX,EAAkBR,GAAlB,EAAsBC,MAAtB,EAA6BC,IAA7B,CAAP;AACH,CAJD;;AAKA,eAAeR,KAAf","sourcesContent":["import _Axios from 'tcl-http-request';\nimport mockServer from '../mock';\nlet Axios = {};\nconst isProd = process.env.NODE_ENV==='production'\n\nAxios.get = function(url,params={},opts={}){\n    mockServer(url,opts);\n    opts.baseURL = isProd?opts.proBaseUrl:opts.devBaseUrl;\n    return _Axios.get(url,params,opts)\n}\nAxios.post = function(url,params={},opts={}){\n    mockServer(url,opts);\n    opts.baseURL = isProd?opts.proBaseUrl:opts.devBaseUrl;\n    return _Axios.post(url,params,opts);\n}\n\nAxios.raw = function(method,url,params={},opts={}){\n    mockServer(url,opts);\n    opts.baseURL = isProd?opts.proBaseUrl:opts.devBaseUrl;\n    return _Axios.raw(method,url,params,opts);\n}\nexport default Axios;"]},"metadata":{},"sourceType":"module"}