{"ast":null,"code":"import { objectAppend } from \"../utils/index\";\nvar defaultState = {\n  locale: ''\n};\nexport default (function (state, action) {\n  var newState = {};\n\n  switch (action.type) {\n    case 'APP_TOGGLE_LOCALE':\n      newState.locale = action.locale;\n      break;\n\n    default:\n      return state || defaultState;\n  }\n\n  return objectAppend(newState, state);\n});","map":{"version":3,"sources":["/local/front-end/Next/next-scaffold/reducers/app.ts"],"names":["objectAppend","defaultState","locale","state","action","newState","type"],"mappings":"AAAA,SAAQA,YAAR;AAIA,IAAMC,YAAkC,GAAG;AACvCC,EAAAA,MAAM,EAAC;AADgC,CAA3C;AAIA,gBAAe,UAACC,KAAD,EAAWC,MAAX,EAA0B;AACrC,MAAIC,QAA8B,GAAG,EAArC;;AACA,UAAOD,MAAM,CAACE,IAAd;AACI,SAAK,mBAAL;AACID,MAAAA,QAAQ,CAACH,MAAT,GAAkBE,MAAM,CAACF,MAAzB;AACA;;AACJ;AAAS,aAAOC,KAAK,IAAEF,YAAd;AAJb;;AAMA,SAAOD,YAAY,CAACK,QAAD,EAAUF,KAAV,CAAnB;AACH,CATD","sourcesContent":["import {objectAppend} from '../utils/index';\nimport { TypeInterface } from 'custom';\n\n\nconst defaultState:TypeInterface._Object = {\n    locale:'',\n}\n\nexport default (state:any,action:any) => {\n    let newState:TypeInterface._Object = {};\n    switch(action.type){\n        case 'APP_TOGGLE_LOCALE':\n            newState.locale = action.locale;\n            break;\n        default: return state||defaultState;\n    }\n    return objectAppend(newState,state);\n}"]},"metadata":{},"sourceType":"module"}