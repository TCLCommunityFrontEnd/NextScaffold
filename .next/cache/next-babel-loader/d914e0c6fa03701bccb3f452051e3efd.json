{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/local/sdb/Project/NextScaffold/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { withIntl } from \"../components/CustomComponent\";\nimport { FormattedMessage, injectIntl } from 'react-intl'; // import LocaleToggle from 'components/LocaleToggle';\n\nimport \"../less/login.less\";\nvar FormItem = _Form.Item;\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showIncorrect: false,\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, data) {\n        if (!err) {\n          _this.setState({\n            loading: true\n          }); // location.href = 'index.html';\n          // this.props.onLogin.call(this, data);\n\n\n          Router.push('/index');\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var locale = this.props.locale;\n      var intl = this.props.intl;\n      return __jsx(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(FormItem, {\n        className: 'account',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: __jsx(FormattedMessage, {\n            id: \"login_index_msg2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          })\n        }]\n      })(__jsx(_Input, {\n        size: \"large\",\n        prefix: __jsx(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }),\n        placeholder: intl.formatMessage({\n          id: 'login_index_msg3'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), __jsx(FormItem, {\n        className: 'pwd',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: __jsx(FormattedMessage, {\n            id: \"login_index_msg4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          })\n        }]\n      })(__jsx(_Input, {\n        size: \"large\",\n        prefix: __jsx(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        onChange: function onChange() {\n          _this2.state.showIncorrect && _this2.setState({\n            showIncorrect: false\n          });\n        },\n        type: \"password\",\n        placeholder: intl.formatMessage({\n          id: 'login_index_msg5'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), this.state.showIncorrect && __jsx(_Alert, {\n        message: __jsx(FormattedMessage, {\n          id: 'login_index_msg6',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        type: \"error\",\n        showIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(_Button, {\n        className: \"loginBtn\",\n        size: \"large\",\n        htmlType: \"submit\",\n        icon: \"login\",\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(FormattedMessage, {\n        id: 'login_index_msg8',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar LoginComponent = connect(function (state) {\n  var locale = state.app.locale;\n  return {\n    locale: locale\n  };\n}, null)(_Form.create()(Login));\nexport default withIntl(injectIntl(LoginComponent));","map":{"version":3,"sources":["/local/sdb/Project/NextScaffold/pages/login.tsx"],"names":["React","connect","Router","withIntl","FormattedMessage","injectIntl","FormItem","Item","Login","showIncorrect","loading","e","preventDefault","props","form","validateFields","err","data","setState","push","getFieldDecorator","locale","intl","handleSubmit","rules","required","message","color","formatMessage","id","state","Component","LoginComponent","app","create"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport action from 'actions/app';\nimport { Form, Icon, Input, Button,  Alert } from 'antd';\nimport Router from 'next/router';\nimport {withIntl} from 'components/CustomComponent';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n// import LocaleToggle from 'components/LocaleToggle';\n\nimport 'less/login.less';\n\ninterface CompProps {\n    form?:any,\n    onLogin?:Function,\n    locale?:string,\n    intl?:any,\n    initLocale?:Function\n}\ninterface CompState {\n    showIncorrect:boolean,\n    loading:boolean\n}\n\nconst FormItem = Form.Item;\n\nclass Login extends React.Component<CompProps,CompState> {\n    state = {\n        showIncorrect: false,\n        loading: false\n    };\n    static async getInitialProps(){\n\n    }\n\n    handleSubmit = (e:any) => {\n        e.preventDefault();\n        this.props.form.validateFields((err:any, data:any) => {\n            if (!err) {\n                this.setState({ loading: true });\n                // location.href = 'index.html';\n                // this.props.onLogin.call(this, data);\n                Router.push('/index');\n            }\n        });\n    };\n\n    render () {\n        const { getFieldDecorator } = this.props.form;\n        const {locale} = this.props;\n        const intl = this.props.intl;\n        return ( \n            <div className=\"login\">\n                <div>\n                    \n                    <Form onSubmit={this.handleSubmit} className=\"main\">\n                        \n                        <FormItem className={'account'}>\n                            {/* 这应该是个bug,getFieldDecorator的id必须设置为FormattedMessage的id才能找到对应字段 */}\n                            {getFieldDecorator('username', {\n                                rules: [{ required: true, message: <FormattedMessage id=\"login_index_msg2\"/> }]\n                            })(\n                                <Input size=\"large\"\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder={intl.formatMessage({ id: 'login_index_msg3' })} />\n                            )}\n                        </FormItem>\n                        <FormItem className={'pwd'}>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: <FormattedMessage id=\"login_index_msg4\"/> }]\n                            })(\n                                <Input size=\"large\"\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    onChange={() => { this.state.showIncorrect && this.setState({ showIncorrect: false }); }}\n                                    type=\"password\"\n                                    placeholder={intl.formatMessage({ id: 'login_index_msg5' })} />\n                            )}\n                        </FormItem>\n                        {this.state.showIncorrect && <Alert message={<FormattedMessage id={'login_index_msg6'}/>} type=\"error\" showIcon />}\n                        {/* <div>\n                            <span><FormattedMessage id={'login_index_msg7'}/></span>\n                        </div> */}\n                        <div>\n                            <Button className=\"loginBtn\"  size=\"large\" htmlType=\"submit\" icon=\"login\" loading={this.state.loading}>\n                                <FormattedMessage id={'login_index_msg8'}/>\n                            </Button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nlet LoginComponent:any = connect((state:any)=>{\n    const {locale} = state.app;\n    return {locale}\n}, null)(Form.create()(Login));\n\nexport default withIntl(injectIntl(LoginComponent));\n"]},"metadata":{},"sourceType":"module"}