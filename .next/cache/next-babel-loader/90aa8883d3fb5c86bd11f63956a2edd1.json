{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/local/front-end/Next/next-scaffold/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { withIntl } from \"../components/CustomComponent\";\nimport { FormattedMessage, injectIntl } from 'react-intl'; // import LocaleToggle from 'components/LocaleToggle';\n\nimport \"../less/login.less\";\nconst FormItem = _Form.Item;\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showIncorrect: false,\n      loading: false\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, data) => {\n        if (!err) {\n          this.setState({\n            loading: true\n          }); // location.href = 'index.html';\n          // this.props.onLogin.call(this, data);\n\n          Router.push('/index');\n        }\n      });\n    });\n  }\n\n  static async getInitialProps() {}\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const {\n      locale\n    } = this.props;\n    const intl = this.props.intl;\n    return __jsx(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(_Form, {\n      onSubmit: this.handleSubmit,\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(FormItem, {\n      className: 'account',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: __jsx(FormattedMessage, {\n          id: \"login_index_msg2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })\n      }]\n    })(__jsx(_Input, {\n      size: \"large\",\n      prefix: __jsx(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      placeholder: intl.formatMessage({\n        id: 'login_index_msg3'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), __jsx(FormItem, {\n      className: 'pwd',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: __jsx(FormattedMessage, {\n          id: \"login_index_msg4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        })\n      }]\n    })(__jsx(_Input, {\n      size: \"large\",\n      prefix: __jsx(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      onChange: () => {\n        this.state.showIncorrect && this.setState({\n          showIncorrect: false\n        });\n      },\n      type: \"password\",\n      placeholder: intl.formatMessage({\n        id: 'login_index_msg5'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), this.state.showIncorrect && __jsx(_Alert, {\n      message: __jsx(FormattedMessage, {\n        id: 'login_index_msg6',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      type: \"error\",\n      showIcon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(_Button, {\n      className: \"loginBtn\",\n      size: \"large\",\n      htmlType: \"submit\",\n      icon: \"login\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(FormattedMessage, {\n      id: 'login_index_msg8',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nlet LoginComponent = connect(state => {\n  const {\n    locale\n  } = state.app;\n  return {\n    locale\n  };\n}, null)(_Form.create()(Login));\nexport default withIntl(injectIntl(LoginComponent));","map":{"version":3,"sources":["/local/front-end/Next/next-scaffold/pages/login.tsx"],"names":["React","connect","Router","withIntl","FormattedMessage","injectIntl","FormItem","Item","Login","Component","showIncorrect","loading","e","preventDefault","props","form","validateFields","err","data","setState","push","getInitialProps","render","getFieldDecorator","locale","intl","handleSubmit","rules","required","message","color","formatMessage","id","state","LoginComponent","app","create"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport action from 'actions/app';\nimport { Form, Icon, Input, Button,  Alert } from 'antd';\nimport Router from 'next/router';\nimport {withIntl} from 'components/CustomComponent';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n// import LocaleToggle from 'components/LocaleToggle';\n\nimport 'less/login.less';\n\ninterface CompProps {\n    form?:any,\n    onLogin?:Function,\n    locale?:string,\n    intl?:any,\n    initLocale?:Function\n}\ninterface CompState {\n    showIncorrect:boolean,\n    loading:boolean\n}\n\nconst FormItem = Form.Item;\n\nclass Login extends React.Component<CompProps,CompState> {\n    state = {\n        showIncorrect: false,\n        loading: false\n    };\n    static async getInitialProps(){\n\n    }\n\n    handleSubmit = (e:any) => {\n        e.preventDefault();\n        this.props.form.validateFields((err:any, data:any) => {\n            if (!err) {\n                this.setState({ loading: true });\n                // location.href = 'index.html';\n                // this.props.onLogin.call(this, data);\n                Router.push('/index');\n            }\n        });\n    };\n\n    render () {\n        const { getFieldDecorator } = this.props.form;\n        const {locale} = this.props;\n        const intl = this.props.intl;\n        return ( \n            <div className=\"login\">\n                <div>\n                    \n                    <Form onSubmit={this.handleSubmit} className=\"main\">\n                        \n                        <FormItem className={'account'}>\n                            {/* 这应该是个bug,getFieldDecorator的id必须设置为FormattedMessage的id才能找到对应字段 */}\n                            {getFieldDecorator('username', {\n                                rules: [{ required: true, message: <FormattedMessage id=\"login_index_msg2\"/> }]\n                            })(\n                                <Input size=\"large\"\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder={intl.formatMessage({ id: 'login_index_msg3' })} />\n                            )}\n                        </FormItem>\n                        <FormItem className={'pwd'}>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: <FormattedMessage id=\"login_index_msg4\"/> }]\n                            })(\n                                <Input size=\"large\"\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    onChange={() => { this.state.showIncorrect && this.setState({ showIncorrect: false }); }}\n                                    type=\"password\"\n                                    placeholder={intl.formatMessage({ id: 'login_index_msg5' })} />\n                            )}\n                        </FormItem>\n                        {this.state.showIncorrect && <Alert message={<FormattedMessage id={'login_index_msg6'}/>} type=\"error\" showIcon />}\n                        {/* <div>\n                            <span><FormattedMessage id={'login_index_msg7'}/></span>\n                        </div> */}\n                        <div>\n                            <Button className=\"loginBtn\"  size=\"large\" htmlType=\"submit\" icon=\"login\" loading={this.state.loading}>\n                                <FormattedMessage id={'login_index_msg8'}/>\n                            </Button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nlet LoginComponent:any = connect((state:any)=>{\n    const {locale} = state.app;\n    return {locale}\n}, null)(Form.create()(Login));\n\nexport default withIntl(injectIntl(LoginComponent));\n"]},"metadata":{},"sourceType":"module"}